# Generated by Django 5.0.7 on 2024-08-12 07:58

import base.entities.catalogs.individual.models
import base.entities.catalogs.pass_tag.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Наименование')),
                ('grade', models.IntegerField(default=0, verbose_name='Параллель')),
                ('label', models.CharField(blank=True, default='', max_length=1, verbose_name='Литера')),
            ],
            options={
                'verbose_name': 'Класс',
                'verbose_name_plural': 'Классы',
            },
        ),
        migrations.CreateModel(
            name='ClassGroupEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата зачисления')),
            ],
            options={
                'verbose_name': 'Зачисление обучающихся в классы',
                'verbose_name_plural': 'Зачисления обучающихся в классы',
            },
        ),
        migrations.CreateModel(
            name='ContactInfoType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип контактной информации',
                'verbose_name_plural': 'Типы контактной информации',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, unique=True, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Значение пола',
                'verbose_name_plural': 'Значения пола',
            },
        ),
        migrations.CreateModel(
            name='PassTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Наименование')),
                ('tag_id', models.CharField(max_length=9, unique=True, validators=[base.entities.catalogs.pass_tag.models.tag_id_validator], verbose_name='Идентификатор')),
            ],
            options={
                'verbose_name': 'Чип',
                'verbose_name_plural': 'Чипы',
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Наименование')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, default='', max_length=50, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('social_insurance_number', models.CharField(blank=True, max_length=14, null=True, unique=True, validators=[base.entities.catalogs.individual.models.social_insurance_number_validator], verbose_name='СНИЛС')),
                ('comment', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.gender', verbose_name='Пол')),
            ],
            options={
                'verbose_name': 'Физическое лицо',
                'verbose_name_plural': 'Физические лица',
            },
        ),
        migrations.CreateModel(
            name='ContactInfoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='Значение')),
                ('comment', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Комментарий')),
                ('contact_info_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='base.contactinfotype', verbose_name='Тип')),
                ('individual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.individual', verbose_name='Физическое лицо')),
            ],
            options={
                'verbose_name': 'Элемент контактной информации',
                'verbose_name_plural': 'Элементы контактной информации',
            },
        ),
        migrations.CreateModel(
            name='PassTagRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True, verbose_name='Номер')),
                ('date', models.DateField(verbose_name='Дата')),
                ('request_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата заявки')),
                ('comment', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('executor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='executor', to='base.individual', verbose_name='Исполнитель')),
                ('requester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requester', to='base.individual', verbose_name='Заявитель')),
            ],
            options={
                'verbose_name': 'Заявка на чипы',
                'verbose_name_plural': 'Заявки на чипы',
            },
        ),
        migrations.CreateModel(
            name='PassTagRequestItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('Первоначальный', 'Первоначальный'), ('Замена утраченного', 'Замена утраченного'), ('Замена испорченного', 'Замена испорченного'), ('Дополнительный', 'Дополнительный'), ('Не указано', 'Не указано')], default='Не указано', max_length=50, verbose_name='Причина')),
                ('processing_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Дата обработки')),
                ('status', models.CharField(choices=[('Заявка', 'Заявка'), ('В работе', 'В работе'), ('Отклонено', 'Отклонено'), ('Выполнено', 'Выполнено')], default='Заявка', max_length=50, verbose_name='Статус')),
                ('holder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='base.individual', verbose_name='Держатель')),
                ('pass_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.passtag', verbose_name='Чип')),
                ('pass_tag_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.passtagrequest', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'Элемент заявки на чипы',
                'verbose_name_plural': 'Элементы заявки на чипы',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True, verbose_name='Код')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Наименование')),
                ('individual', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='rel_student', to='base.individual', verbose_name='Физическое лицо')),
            ],
            options={
                'verbose_name': 'Обучающийся',
                'verbose_name_plural': 'Обучающиеся',
            },
        ),
        migrations.CreateModel(
            name='ClassGroupEnrollmentRegistryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата зачисления')),
                ('class_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.classgroup', verbose_name='Класс')),
                ('class_group_enrollment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.classgroupenrollment', verbose_name='Зачисление')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_group_enrollment_registry', to='base.student', verbose_name='Обучающийся')),
            ],
            options={
                'verbose_name': 'Элемент зачисления в класс (регистр)',
                'verbose_name_plural': 'Элементы зачисления в класс (регистр)',
            },
        ),
        migrations.CreateModel(
            name='ClassGroupEnrollmentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='base.classgroup', verbose_name='Класс')),
                ('class_group_enrollment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.classgroupenrollment', verbose_name='Зачисление')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='base.student', verbose_name='Обучающийся')),
            ],
            options={
                'verbose_name': 'Элемент зачисления в класс',
                'verbose_name_plural': 'Элементы зачисления в класс',
            },
        ),
    ]
